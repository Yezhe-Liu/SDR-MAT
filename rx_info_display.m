
rx_samp_rate = yunsdr_init.samp;    

switch type
    case 'QPSK'
        TimeScopeTitleStr = 'Baseband QPSK I/Q Signal';
        SpectrumTitleStr = 'Baseband QPSK Signal Spectrum';
        ModulationOrder = 4;
        SamplesPerSymbol = 2;
    case 'BPSK'
        TimeScopeTitleStr = 'Baseband BPSK I/Q Signal';
        SpectrumTitleStr = 'Baseband BPSK Signal Spectrum';
        ModulationOrder = 2;
        SamplesPerSymbol = 1;
end
%时域
scope1 = dsp.TimeScope('SampleRate',     rx_samp_rate, ...
                      'Title',           TimeScopeTitleStr, ...
                      'TimeSpan',        1/rx_samp_rate*(length(rx_info.base_iq_signal)+5000), ...
                      'YLimits',         [-2^15 2^15], ...
                      'ShowLegend',      true, ...
                      'ShowGrid',        true, ...
                      'Position',        [0 600 400 400]); 
step(scope1, rx_info.base_iq_signal);
release(scope1);
%频域
spectrum = dsp.SpectrumAnalyzer('SampleRate',      rx_samp_rate, ...
                                'SpectrumType',    'Power density', ...
                                'SpectralAverages', 10, ...
                                'YLimits',         [-50 60], ...
                                'Title',           SpectrumTitleStr, ...
                                'YLabel',          'Power spectral density', ...
                                'Position',        [400 600 400 400]);

% Show power spectral density of captured burst
step(spectrum,rx_info.base_iq_signal);
release(spectrum);
%前导码相关性
scope2 = dsp.TimeScope('SampleRate',      rx_samp_rate, ...
                       'Title',           'Preamble Corr', ...
                       'TimeSpan',        1/rx_samp_rate*200, ...
                       'YLimits',         [-0 1], ...
                       'Title',           'Preamble Sync', ...
                       'ShowLegend',      true, ...
                       'ShowGrid',        true, ...
                       'Position',        [800 600 400 400]); 
step(scope2, rx_info.preamble_corr(1:end));
release(scope2);
%信道估计向量？
scope3 = dsp.TimeScope('SampleRate',      rx_samp_rate./rx_info.UpSampleRate, ...
                       'Title',           'uk vector', ...
                       'TimeSpan',        1/(rx_samp_rate./rx_info.UpSampleRate)*6000, ...
                       'YLimits',         [-0.2 1.2], ...
                       'ShowLegend',      true, ...
                       'ShowGrid',        true, ...
                       'Position',        [1200 600 400 400]); 
step(scope3, rx_info.uk_vec(1:6000).');
release(scope3);
%相位误差
scope4 = dsp.TimeScope('SampleRate',      rx_samp_rate./rx_info.UpSampleRate, ...
                       'Title',           'PED', ...
                       'TimeSpan',        1/(rx_samp_rate./rx_info.UpSampleRate)*6000, ...
                       'YLimits',         [-2 2], ...
                       'ShowLegend',      true, ...
                       'ShowGrid',        true, ...
                       'Position',        [0 120 400 400]); 
step(scope4, rx_info.theta(1:6000).');

release(scope4);
%时间均衡后的错误
scope5 = dsp.TimeScope('SampleRate',      rx_samp_rate./rx_info.UpSampleRate, ...
                       'Title',           'Time Equalize', ...
                       'TimeSpan',        1/(rx_samp_rate./rx_info.UpSampleRate)*6000, ...
                       'YLimits',         [-0.5 2], ...
                       'ShowLegend',      true, ...
                       'ShowGrid',        true, ...
                       'Position',        [400 120 400 400]); 
step(scope5, abs(rx_info.equalize_error(1:6000)).');
release(scope5);
%载波同步后星座图
hMod1 = comm.RectangularQAMModulator('ModulationOrder', ModulationOrder);
hScope1 = comm.ConstellationDiagram('SamplesPerSymbol', SamplesPerSymbol, ...
                                    'ReferenceConstellation', constellation(hMod1), ...
                                    'Title', 'Rx Signal After Carrier Sync', ...
                                    'XLimits',                [-5 5], ...
                                    'YLimits',                [-5 5], ...
                                    'Position',               [800 120 400 400]);
                             
step(hScope1, rx_info.rx_sig_carrier_sync(2401:end).');
release(hScope1);
%时域均衡后星座图
hMod2 = comm.RectangularQAMModulator('ModulationOrder', ModulationOrder);
hScope2 = comm.ConstellationDiagram('SamplesPerSymbol', SamplesPerSymbol, ...
                                    'ReferenceConstellation', constellation(hMod2), ...
                                    'Title', 'Rx Signal After Time Equalized', ...
                                    'XLimits',                [-1.5 1.5], ...
                                    'YLimits',                [-1.5 1.5], ...
                                    'Position',               [1200 120 400 400]);
                             
step(hScope2, rx_info.rx_sig_equalized(2401:end).');
release(hScope2);